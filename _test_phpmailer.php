<?php

// https://iam.local.santannapisa.it/_test_phpmailer.php

//// require "vendor/autoload.php";
//// use PHPMailer\PHPMailer\PHPMailer;

use PHPMailer\PHPMailer\Exception;
use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\SMTP;

// require '/var/www/html/gaa/PHPMailer/src/Exception.php';
// require '/var/www/html/gaa/PHPMailer/src/PHPMailer.php';
// require '/var/www/html/gaa/PHPMailer/src/SMTP.php';

require 'vendor/phpmailer/phpmailer/src/Exception.php';
require 'vendor/phpmailer/phpmailer/src/PHPMailer.php';
require 'vendor/phpmailer/phpmailer/src/SMTP.php';

$o=array(
	'soggetto'=>'Test Email via Mailtrap SMTP using PHPMailer'
	,'html'=>'<h1>Send HTML Email using SMTP in PHP</h1><p>This is a test email I\'m sending using SMTP mail server with PHPMailer.</p>'
	,'to'=>array('alberto.bongiorni@santannapisa.it')
	,'from'=>'alberto.bongiorni@santannapisa.it'
);
echo sm($o);

exit;


$mail = new PHPMailer();
$mail->isSMTP();
$mail->Host = 'mail.santannapisa.it';
$mail->SMTPAuth = false;
#$mail->Username = '1a2b3c4d5e6f7g'; //paste one generated by Mailtrap
#$mail->Password = '1a2b3c4d5e6f7g' //paste one generated by Mailtrap
#$mail->SMTPSecure = 'tls';
$mail->Port = 25;
$mail->setFrom('alessandro.giari@santannapisa.it', 'Io');
#$mail->addReplyTo('info@mailtrap.io', 'Mailtrap');
$mail->addAddress('alberto.bongiorni@santannapisa.it', 'Tim');
#$mail->addCC('cc1@example.com', 'Elena');
#$mail->addBCC('bcc1@example.com', 'Alex');
$mail->Subject = 'Test Email via Mailtrap SMTP using PHPMailer';
$mail->isHTML(true);
$mailContent = "<h1>Send HTML Email using SMTP in PHP</h1>
    <p>This is a test email I'm sending using SMTP mail server with PHPMailer.</p>";
$mail->Body = $mailContent;
if($mail->send()){
    echo 'Message has been sent';
}else{
    echo 'Message could not be sent.';
    echo 'Mailer Error: ' . $mail->ErrorInfo;
}

function sm($o){
// function sm($soggetto,$html,$from='',$replyto='',$to,$cc=array(),$bcc=Array(),$attach=array()){
	if (is_array($o)){
		if (!empty($o['soggetto'])){$soggetto=$o['soggetto'];} else {$e='ERRORE: manca il soggetto';}
		if (!empty($o['html'])){$html=$o['html'];} else {$e='ERRORE: manca il contenuto';}
		if (!empty($o['to'])){$to=$o['to'];} else {$e='ERRORE: manca il destinatario';}
		if (!empty($o['from'])){$from=$o['from'];} else {$from='';}
		if (!empty($o['replyto'])){$replyto=$o['replyto'];} else {$replyto='';}
		if (!empty($o['cc'])){$cc=$o['cc'];} else {$cc=Array();}
		if (!empty($o['bcc'])){$bcc=$o['bcc'];} else {$bcc=Array();}
		if (!empty($o['attach'])){$attach=$o['attach'];} else {$attach=Array();}
		
	} else {
		$e='ERRORE';
	}
	
	if (!empty($e)){return $e;}
	
	// send mail con la libreria PHPMailer
	$o365=true;
	$smtpUser='alberto.bongiorni@santannapisa.it';
	$smtpPassword='ABek652wb';
	
	$mail = new PHPMailer(true);

	try {
			//Language
			$mail->setLanguage('it', 'PHPMailer/language/');
			//Server settings
			/*
			SMTP::DEBUG_OFF (0): Normal production setting; no debug output.
			SMTP::DEBUG_CLIENT (1): show client -> server messages only. Don't use this - it's very unlikely to tell you anything useful.
			SMTP::DEBUG_SERVER (2): show client -> server and server -> client messages - this is usually the setting you want
			SMTP::DEBUG_CONNECTION (3): As 2, but also show details about the initial connection; only use this if you're having trouble connecting (e.g. connection timing out)
			SMTP::DEBUG_LOWLEVEL (4): As 3, but also shows detailed low-level traffic. Only really useful for analyzing protocol-level bugs, very verbose, probably not what you need.
			*/		
			$mail->SMTPDebug = SMTP::DEBUG_OFF;                   // Enable verbose debug output
			$mail->isSMTP();                                      // Send using SMTP
			// $mail->Host       = 'smtp.office365.com';          // Set the SMTP server to send through
			$mail->Host       = 'smtp.office365.com';             // Set the SMTP server to send through

			$mail->SMTPAuth   = true;                             // Enable SMTP authentication
			$mail->Username   = $smtpUser;    										// SMTP username
			$mail->Password   = $smtpPassword;                    // SMTP password
			$mail->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;   // Enable TLS encryption; PHPMailer::ENCRYPTION_SMTPS encouraged
			$mail->Port       = 587; 															// TCP port to connect to, use 465 for PHPMailer::ENCRYPTION_SMTPS above

			//Recipients
			//$mail->setFrom('alberto.bongiorni@santannapisa.it', 'Mailer');
			$mail->setFrom($from);

			//$mail->addAddress('alberto.bongiorni@santannapisa.it', 'alberto');     // Add a recipient
			//$mail->addAddress('enrico.bicchierai@santannapisa.it');               // Name is optional
			foreach ($to as $t){
				$mail->addAddress($t);     // Add a recipient
			}

			// $mail->addReplyTo('alberto.bongiorni@santannapisa.it', 'Information');
			if ($replyto==''){$replyto=$from;}
			$mail->addReplyTo($replyto);

			//$mail->addCC('cc@example.com');
			if (!empty($cc)){
				foreach ($cc as $t){
					$mail->addCC($t);     // Add cc
				}
			}

			// Add bcc - attivare per controllo se $to non rediretto fino a data
			// $mail->addBCC('alberto.bongiorni@santannapisa.it'); 
			if (!empty($bcc)){
				foreach ($bcc as $t){
					$mail->addBCC($t);     // Add bcc
				}
			}

			// Attachments
			// $mail->addAttachment('tables/__allievi_che_hanno_ottemperato_il_2021_01_08.csv');         // Add attachments
			// $mail->addAttachment('tables/__allievi_che_non_hanno_ottemperato_il_2021_01_08.csv', 'no.csv');    // Optional name
			if (!empty($attach)){
				foreach ($attach as $t){
					$mail->addAttachment($t);     // Add attach
				}
			}

			// Content
			$mail->isHTML(true);                                  // Set email format to HTML
			$mail->Subject = $soggetto;
			$mail->Body    = $html;
			$mail->AltBody = strip_tags($html);

			$mail->send();
			return 'Messaggio correttamente spedito';
	} catch (Exception $e) {
			$dm=array();
			$dm['smtpUser']=$smtpUser;
			// $dm['smtpPassword']=$smtpPassword;
			$dm['soggetto']=$soggetto;
			$dm['html']=$html;
			$dm['from']=$from;
			$dm['to']=json_encode($to);
			$dm['cc']=json_encode($cc);
			$dm['bcc']=json_encode($bcc);
			$dm['attach']=json_encode($attach);
			$sdm=json_encode($dm);
			return "Il messaggio non puÃ² essere spedito. Mailer Error: {$mail->ErrorInfo}"."\n".$sdm;
	}
}
?>
